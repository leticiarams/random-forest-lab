; MNIST dataset.
 
(defvar *forest-model* (quote 

(((356 250 6 416 37 246 743 535 273 726 15 245)
  (ROOT
   ("A"
    ("D"
     ("D"
      ("A"
       ("A"
        ("A"
         ("A"
          ("D"
           ("A"
            ("D"
             ("D"
              ("A" ("0") (0) ("1") (6) ("2") (0) ("3") (1) ("4") (0) ("5") (0)
               ("6") (0) ("7") (0) ("8") (0) ("9") (0))
              ("D" ("0") (0) ("1") (1) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
               ("6") (0) ("7") (0) ("8") (1) ("9") (0))
              ("B" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
               ("6") (0) ("7") (1) ("8") (0) ("9") (0)))))))))))))))
 ((55 176 110 645 203 170 196 146 222 393 742)
  (ROOT
   ("A"
    ("D"
     ("D"
      ("A"
       ("D"
        ("B"
         ("B"
          ("D"
           ("D"
            ("B"
             ("D" ("0") (0) ("1") (1) ("2") (0) ("3") (0) ("4") (1) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))
         ("A"
          ("D"
           ("D"
            ("A"
             ("D" ("0") (1) ("1") (5) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0)))
            ("B"
             ("D" ("0") (0) ("1") (0) ("2") (0) ("3") (1) ("4") (0) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0)))))))))
      ("C"
       ("D"
        ("B"
         ("B"
          ("D"
           ("D"
            ("D"
             ("D" ("0") (0) ("1") (0) ("2") (1) ("3") (0) ("4") (0) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))))))))
 ((157 92 21 75 504 719 226 84 749 196 699)
  (ROOT
   ("D"
    ("D"
     ("D"
      ("D"
       ("A"
        ("A"
         ("D"
          ("A"
           ("D"
            ("A"
             ("A" ("0") (1) ("1") (3) ("2") (0) ("3") (1) ("4") (0) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0))
             ("B" ("0") (0) ("1") (1) ("2") (0) ("3") (0) ("4") (1) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0))
             ("D" ("0") (1) ("1") (2) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))))))))
 ((764 717 558 422 283 70 374 231 673 165 441)
  (ROOT
   ("C"
    ("D"
     ("D"
      ("A"
       ("B"
        ("A"
         ("A"
          ("A"
           ("D"
            ("A"
             ("D" ("0") (0) ("1") (1) ("2") (0) ("3") (0) ("4") (1) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))))))
   ("A"
    ("D"
     ("D"
      ("A"
       ("D"
        ("A"
         ("A"
          ("A"
           ("D"
            ("A"
             ("D" ("0") (0) ("1") (1) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
              ("6") (1) ("7") (0) ("8") (0) ("9") (0))))))))
       ("C"
        ("A"
         ("A"
          ("A"
           ("D"
            ("A"
             ("D" ("0") (0) ("1") (1) ("2") (0) ("3") (0) ("4") (1) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))
       ("B"
        ("A"
         ("A"
          ("A"
           ("D"
            ("A"
             ("D" ("0") (0) ("1") (1) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0)))))))))
      ("D"
       ("D"
        ("A"
         ("A"
          ("A"
           ("D"
            ("A"
             ("D" ("0") (0) ("1") (0) ("2") (0) ("3") (1) ("4") (0) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))
       ("B"
        ("A"
         ("A"
          ("A"
           ("D"
            ("A"
             ("D" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
              ("6") (0) ("7") (1) ("8") (0) ("9") (0))))))))))))
   ("D"
    ("D"
     ("D"
      ("B"
       ("C"
        ("A"
         ("A"
          ("A"
           ("D"
            ("A"
             ("D" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (1) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))))))))
 ((169 219 162 587 229 383 341 525 357 128 753 580 634 362 475 721 416 750 139)
  (ROOT
   ("D"
    ("D"
     ("A"
      ("B"
       ("D"
        ("D"
         ("A"
          ("A"
           ("D"
            ("A"
             ("A"
              ("D"
               ("A"
                ("A"
                 ("A"
                  ("D"
                   ("A"
                    ("A"
                     ("D" ("0") (0) ("1") (0) ("2") (1) ("3") (0) ("4") (0)
                      ("5") (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0)))))))))
              ("A"
               ("A"
                ("C"
                 ("B"
                  ("D"
                   ("A"
                    ("A"
                     ("D" ("0") (0) ("1") (0) ("2") (0) ("3") (1) ("4") (0)
                      ("5") (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0)))))))
                ("A"
                 ("A"
                  ("D"
                   ("A"
                    ("A"
                     ("D" ("0") (0) ("1") (4) ("2") (0) ("3") (0) ("4") (0)
                      ("5") (0) ("6") (0) ("7") (0) ("8") (1) ("9")
                      (0)))))))))))
            ("D"
             ("A"
              ("A"
               ("A"
                ("A"
                 ("A"
                  ("D"
                   ("A"
                    ("A"
                     ("D" ("0") (0) ("1") (2) ("2") (0) ("3") (0) ("4") (0)
                      ("5") (0) ("6") (0) ("7") (0) ("8") (0) ("9")
                      (0)))))))))))
            ("B"
             ("A"
              ("A"
               ("A"
                ("A"
                 ("A"
                  ("D"
                   ("A"
                    ("A"
                     ("D" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (0)
                      ("5") (0) ("6") (0) ("7") (0) ("8") (1) ("9")
                      (0))))))))))))))))))))))) )) 
(defvar results (quote 
)) 
;;;;;;;;;;;;;
; Parameters file.

; Name for this dataset (or set of parameters).
(defvar *dataset-name* "; MNIST dataset.")

; Wich features are numeric? 
; Features position: '(1 3 4)
; All features are numeric: t
; No numeric features: nil
(defvar *num-fetures* t)
; Total features:
(defvar *total-fetures* '782) 
; Minimal quantities of features tu use to build the trees:
(defvar *min-fetures-sample* 10)
; Maximal quantities of features tu use to build the trees:
(defvar *max-fetures-sample* 20)
; Targets? 
(defvar *targets* '("0" "1" "2" "3" "4" "5" "6" "7" "8" "9"))

; Model parameters.

; Number os trees in the forest:
(defvar *NTrees* 5)
; How much samples will be used to build the trees?
(defvar *NSamples* 10)
; To prune the worst trees with low rating accuracy.
; Prune below THPrec.
(defvar *THPrec* 0.8)

; Test rounds 
(defvar *TRounds* 2)
; Load the datasets to memory
(defvar *TSamples_train* 30000)
(defvar *TSamples_test* 10000)

; 16280 dataset.test.csv
; 32561 dataset.training.csv
; 48841 total
; Without samples with missing data:
; 15059 dataset.test.csv
; 30162 dataset.training.csv
; 45221 total

;EOF