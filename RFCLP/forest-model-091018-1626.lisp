; MNIST dataset.
 
(defvar *forest-model* (quote 

(((755 568 663 249 15 484 542 51 453 584 121 305 760 664 774 528 162 717)
  (ROOT
   ("A"
    ("A"
     ("A"
      ("D"
       ("D"
        ("D"
         ("B"
          ("A"
           ("B"
            ("A"
             ("D"
              ("B"
               ("D"
                ("D"
                 ("B"
                  ("D"
                   ("A"
                    ("D" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (0)
                     ("5") (0) ("6") (0) ("7") (0) ("8") (0) ("9")
                     (1)))))))))))))))
       ("A"
        ("D"
         ("B"
          ("A"
           ("B"
            ("D"
             ("D"
              ("D"
               ("A"
                ("D"
                 ("B"
                  ("A"
                   ("D"
                    ("D" ("0") (1) ("1") (0) ("2") (0) ("3") (0) ("4") (0)
                     ("5") (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))
              ("A"
               ("A"
                ("D"
                 ("B"
                  ("A"
                   ("A"
                    ("D" ("0") (1) ("1") (0) ("2") (0) ("3") (0) ("4") (0)
                     ("5") (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))))
            ("A"
             ("D"
              ("A"
               ("A"
                ("D"
                 ("B"
                  ("A"
                   ("A"
                    ("D" ("0") (0) ("1") (2) ("2") (0) ("3") (0) ("4") (0)
                     ("5") (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0)))
                   ("D"
                    ("D" ("0") (0) ("1") (0) ("2") (0) ("3") (1) ("4") (0)
                     ("5") (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0)))
                   ("C"
                    ("D" ("0") (0) ("1") (0) ("2") (0) ("3") (1) ("4") (0)
                     ("5") (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))
              ("D"
               ("A"
                ("D"
                 ("B"
                  ("A"
                   ("A"
                    ("D" ("0") (0) ("1") (1) ("2") (0) ("3") (0) ("4") (0)
                     ("5") (0) ("6") (1) ("7") (0) ("8") (0) ("9") (0)))))))
               ("D"
                ("D"
                 ("B"
                  ("A"
                   ("B"
                    ("D" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (0)
                     ("5") (1) ("6") (0) ("7") (0) ("8") (0) ("9")
                     (0)))))))))))))))))))))
 ((140 155 382 425 216 102 646 394 580 173 751 729)
  (ROOT
   ("D"
    ("D"
     ("A"
      ("A"
       ("A"
        ("B"
         ("D"
          ("A"
           ("D"
            ("A"
             ("D"
              ("D" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
               ("6") (1) ("7") (0) ("8") (0) ("9") (0)))))))
         ("A"
          ("A"
           ("A"
            ("A"
             ("B"
              ("D" ("0") (0) ("1") (4) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
               ("6") (0) ("7") (0) ("8") (0) ("9") (1))))
            ("D"
             ("D"
              ("D" ("0") (0) ("1") (2) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
               ("6") (1) ("7") (0) ("8") (0) ("9") (0))))))))))
      ("D"
       ("A"
        ("B"
         ("A"
          ("D"
           ("A"
            ("A"
             ("D"
              ("D" ("0") (0) ("1") (0) ("2") (1) ("3") (0) ("4") (0) ("5") (0)
               ("6") (0) ("7") (0) ("8") (0) ("9") (0)))))))))))))))
 ((425 222 74 55 57 542 712 274 25 778 498)
  (ROOT
   ("A"
    ("D"
     ("D"
      ("A"
       ("A"
        ("A"
         ("D"
          ("D"
           ("A"
            ("D"
             ("D" ("0") (1) ("1") (0) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0))
             ("A" ("0") (0) ("1") (2) ("2") (0) ("3") (1) ("4") (0) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0)))))))
        ("D"
         ("D"
          ("D"
           ("A"
            ("D"
             ("A" ("0") (1) ("1") (1) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
              ("6") (0) ("7") (0) ("8") (1) ("9") (0))))))))
       ("B"
        ("A"
         ("D"
          ("D"
           ("A"
            ("D"
             ("A" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (1)))))))))
      ("C"
       ("A"
        ("A"
         ("D"
          ("D"
           ("A"
            ("D"
             ("D" ("0") (1) ("1") (0) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))))))
   ("D"
    ("D"
     ("D"
      ("A"
       ("A"
        ("A"
         ("D"
          ("D"
           ("A"
            ("D"
             ("D" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (1) ("5") (0)
              ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))))))))
 ((608 525 244 403 596 166 49 251 314 135 112 174 358)
  (ROOT
   ("A"
    ("A"
     ("D"
      ("A"
       ("A"
        ("D"
         ("D"
          ("D"
           ("D"
            ("D"
             ("A"
              ("A"
               ("A" ("0") (0) ("1") (0) ("2") (1) ("3") (0) ("4") (0) ("5") (0)
                ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))
           ("A"
            ("B"
             ("A"
              ("A"
               ("A" ("0") (0) ("1") (3) ("2") (0) ("3") (0) ("4") (1) ("5") (0)
                ("6") (0) ("7") (0) ("8") (0) ("9") (0))))
             ("D"
              ("A"
               ("A" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
                ("6") (0) ("7") (1) ("8") (0) ("9") (0)))))
            ("C"
             ("A"
              ("A"
               ("A" ("0") (0) ("1") (2) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
                ("6") (0) ("7") (0) ("8") (0) ("9") (1)))))
            ("D"
             ("A"
              ("A"
               ("A" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (0) ("5") (0)
                ("6") (0) ("7") (0) ("8") (0) ("9") (1))))))))))))))))
 ((287 75 415 42 163 22 597 459 561 610 594 506 534 363 608)
  (ROOT
   ("A"
    ("D"
     ("A"
      ("A"
       ("A"
        ("A"
         ("D"
          ("C"
           ("B"
            ("D"
             ("A"
              ("D"
               ("A"
                ("A"
                 ("B" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (0) ("5")
                  (0) ("6") (0) ("7") (0) ("8") (0) ("9") (1))
                 ("D" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (1) ("5")
                  (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0))
                 ("A" ("0") (0) ("1") (0) ("2") (0) ("3") (0) ("4") (1) ("5")
                  (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0)))))))))
          ("D"
           ("D"
            ("D"
             ("A"
              ("D"
               ("A"
                ("A"
                 ("A" ("0") (0) ("1") (3) ("2") (0) ("3") (0) ("4") (0) ("5")
                  (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0)))))))))
          ("B"
           ("D"
            ("D"
             ("A"
              ("D"
               ("A"
                ("A"
                 ("B" ("0") (1) ("1") (0) ("2") (0) ("3") (0) ("4") (0) ("5")
                  (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))
           ("B"
            ("D"
             ("A"
              ("D"
               ("A"
                ("A"
                 ("A" ("0") (0) ("1") (1) ("2") (0) ("3") (0) ("4") (0) ("5")
                  (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))
           ("C"
            ("D"
             ("A"
              ("D"
               ("A"
                ("A"
                 ("A" ("0") (0) ("1") (0) ("2") (0) ("3") (1) ("4") (0) ("5")
                  (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))))))
       ("B"
        ("A"
         ("D"
          ("B"
           ("D"
            ("D"
             ("A"
              ("D"
               ("A"
                ("A"
                 ("B" ("0") (1) ("1") (0) ("2") (0) ("3") (0) ("4") (0) ("5")
                  (0) ("6") (0) ("7") (0) ("8") (0) ("9") (0))))))))))))))))))) )) 
(defvar results (quote 
)) 
;;;;;;;;;;;;;
; Parameters file.

; Name for this dataset (or set of parameters).
(defvar *dataset-name* "; MNIST dataset.")

; Wich features are numeric? 
; Features position: '(1 3 4)
; All features are numeric: t
; No numeric features: nil
(defvar *num-fetures* t)
; Total features:
(defvar *total-fetures* '782) 
; Minimal quantities of features tu use to build the trees:
(defvar *min-fetures-sample* 10)
; Maximal quantities of features tu use to build the trees:
(defvar *max-fetures-sample* 20)
; Targets? 
(defvar *targets* '("0" "1" "2" "3" "4" "5" "6" "7" "8" "9"))

; Model parameters.

; Number os trees in the forest:
(defvar *NTrees* 5)
; How much samples will be used to build the trees?
(defvar *NSamples* 10)
; To prune the worst trees with low rating accuracy.
; Prune below THPrec.
(defvar *THPrec* 0.1)

; Test rounds 
(defvar *TRounds* 2)
; Load the datasets to memory
(defvar *TSamples_train* 30000)
(defvar *TSamples_test* 10000)

; 16280 dataset.test.csv
; 32561 dataset.training.csv
; 48841 total
; Without samples with missing data:
; 15059 dataset.test.csv
; 30162 dataset.training.csv
; 45221 total

;EOF